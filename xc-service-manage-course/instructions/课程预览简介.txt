课程预览就是为了在发布之前查看课程详情页面是否正确，此时该页面应该符合SEO的原则（能够符合搜索引擎优化），一般来说我们平常获取数据然后进行前端数据渲染是不适合进行seo的
但是我们在服务端进行生成html，然后访问服务端的html就适合了，但是一般的web服务器的并发量是不高的
像tomcat每秒300-500，不过nginx是5000甚至更好。
所以这里我们使用nginx来做访问，而又因为nginx是不能运行java程序的，tomcat能运行，所以这里我们将服务端生成的html页面进行静态化处理，然后通过nginx访问

流程：用户-->浏览器-->nginx从cms项目生成静态页面存储nginx服务器响应给浏览器
可能页面中会有一些动态数据，需要通过ajax访问微服务，但毕竟是小部分，大部分的静态数据已经通过nginx返回了，已经符合要求

但是有个缺点，需要维护大量静态页面，维护起来困难，解决办法：通过cms系统的管理这些页面



静态页面的编写：
1：页面静态化需要的模型数据编写
2：页面模板编写

首先先将模板文件编写完毕，然后使用nginx来进行静态的文件测试，测试的配置示意和配置好的nginx.conf文件在该目录下
